[
  {
    "title": "Atomic Design - Átomos",
    "description": "Componentes atômicos: Button, Input e Icon. São os blocos mais básicos, reutilizáveis e indivisíveis do design system.",
    "code": "// components/atoms/Button.tsx\nfunction Button({ children, variant = 'primary', ...props }) {\n  return (\n    <button \n      className={`btn btn-${variant}`}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n}\n\n// components/atoms/Input.tsx\nfunction Input({ label, ...props }) {\n  return (\n    <div className=\"input-wrapper\">\n      {label && <label>{label}</label>}\n      <input {...props} />\n    </div>\n  );\n}\n\n// components/atoms/Icon.tsx\nfunction Icon({ name, size = 16 }) {\n  return (\n    <span className={`icon icon-${name}`} style={{ fontSize: size }}>\n      {getIcon(name)}\n    </span>\n  );\n}\n\n// Componentes básicos\n// Não podem ser divididos\n// Reutilizáveis em todo lugar"
  },
  {
    "title": "Atomic Design - Moléculas",
    "description": "Moléculas: combinação de átomos para criar componentes com funcionalidade específica, como SearchBar e FormField.",
    "code": "// components/molecules/SearchBar.tsx\nimport { Input } from '../atoms/Input';\nimport { Button } from '../atoms/Button';\nimport { Icon } from '../atoms/Icon';\n\nfunction SearchBar({ onSearch, placeholder }) {\n  const [query, setQuery] = useState('');\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSearch(query);\n  };\n  \n  return (\n    <form onSubmit={handleSubmit} className=\"search-bar\">\n      <Input\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        placeholder={placeholder}\n      />\n      <Button type=\"submit\">\n        <Icon name=\"search\" />\n      </Button>\n    </form>\n  );\n}\n\n// components/molecules/FormField.tsx\nimport { Input } from '../atoms/Input';\nimport { Icon } from '../atoms/Icon';\n\nfunction FormField({ label, error, icon, ...props }) {\n  return (\n    <div className=\"form-field\">\n      <Input \n        label={label}\n        {...props}\n      />\n      {icon && <Icon name={icon} />}\n      {error && <span className=\"error\">{error}</span>}\n    </div>\n  );\n}\n\n// Combinação de átomos\n// Funcionalidade específica\n// Reutilizável"
  },
  {
    "title": "Atomic Design - Organismos",
    "description": "Organismos: combinação de moléculas e átomos para criar seções completas e independentes, como Header, Footer ou ProductList.",
    "code": "// components/organisms/Header.tsx\nimport { Logo } from '../atoms/Logo';\nimport { NavMenu } from '../molecules/NavMenu';\n\nfunction Header() {\n  return (\n    <header>\n      <Logo />\n      <NavMenu />\n    </header>\n  );\n}\n\n// components/organisms/ProductList.tsx\nimport { ProductCard } from '../molecules/ProductCard';\n\nfunction ProductList({ products }) {\n  return (\n    <section>\n      {products.map(product => (\n        <ProductCard key={product.id} product={product} />\n      ))}\n    </section>\n  );\n}\n\n// Organismos são blocos grandes e independentes\n// Podem ser usados em várias páginas"
  },
  {
    "title": "Atomic Design - Templates",
    "description": "Templates: estrutura de layout da página, organizando organismos e placeholders para conteúdo real.",
    "code": "// components/templates/MainTemplate.tsx\nimport { Header } from '../organisms/Header';\nimport { Footer } from '../organisms/Footer';\n\nfunction MainTemplate({ children }) {\n  return (\n    <div>\n      <Header />\n      <main>{children}</main>\n      <Footer />\n    </div>\n  );\n}\n\n// Templates definem a estrutura, mas não o conteúdo final\n// Usados para padronizar páginas"
  },
  {
    "title": "Atomic Design - Páginas",
    "description": "Páginas: instâncias reais dos templates, já com dados e conteúdo final renderizado.",
    "code": "// pages/HomePage.tsx\nimport { MainTemplate } from '../components/templates/MainTemplate';\nimport { ProductList } from '../components/organisms/ProductList';\n\nfunction HomePage({ products }) {\n  return (\n    <MainTemplate>\n      <h1>Bem-vindo!</h1>\n      <ProductList products={products} />\n    </MainTemplate>\n  );\n}\n\n// Páginas são o topo da hierarquia\n// Cada página é uma combinação de template + dados reais"
  }
]

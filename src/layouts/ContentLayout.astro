---
// Recebe frontmatter automaticamente
const { frontmatter } = Astro.props;
import Layout from './Layout.astro';
import Breadcrumb from '../components/Breadcrumb.astro';
import TOC from '../components/TOC.astro';
---

<Layout>
	<main class="container mx-auto px-4 py-8 grid gap-8 xl:grid-cols-[minmax(0,1fr)_auto]">
		<!-- Barra de progresso de leitura -->
		<div id="reading-progress" class="fixed top-0 left-0 h-1 bg-primary z-50 w-0 transition-[width] duration-150"></div>

		<article class="prose prose-skeleton max-w-none">
			<Breadcrumb />
			<h1 class="mb-2">{frontmatter.title}</h1>
			<p class="text-gray-500 mb-6">{frontmatter.description}</p>
			<slot />
		</article>

		<TOC />
	</main>
</Layout>

<script is:inline>
// Atualiza largura da barra conforme scroll
document.addEventListener('scroll', () => {
  const doc = document.documentElement;
  const total = doc.scrollHeight - doc.clientHeight;
  const progress = total > 0 ? (doc.scrollTop / total) * 100 : 0;
  document.getElementById('reading-progress').style.width = progress + '%';
});
</script>

<!-- Copy to Clipboard for code blocks -->
<script is:inline>
document.addEventListener('DOMContentLoaded', () => {
  document.querySelectorAll('pre > code').forEach(code => {
    const pre = code.parentElement;
    pre.classList.add('relative');
    const btn = document.createElement('button');
    btn.textContent = 'Copy';
    btn.className = 'copy-btn btn btn-xs btn-ghost absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition';
    btn.addEventListener('click', () => {
      navigator.clipboard.writeText(code.innerText).then(() => {
        btn.textContent = 'Copied!';
        setTimeout(() => (btn.textContent = 'Copy'), 1500);
      });
    });
    pre.classList.add('group');
    pre.appendChild(btn);
  });
});
</script>

<style>
.prose-skeleton :where(h1, h2, h3, h4) {
	color: currentColor;
}
.copy-btn {
  font-size: 0.75rem;
}
</style> 
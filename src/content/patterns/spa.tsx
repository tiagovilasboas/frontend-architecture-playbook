import { Title, Text, Stack, Paper, Alert, List, ThemeIcon, Group, Card, Badge } from '@mantine/core';
import { IconBulb, IconAlertTriangle, IconCheck, IconCode, IconLayout, IconBolt } from '@tabler/icons-react';
import CodeExample from '../../components/CodeExample';
import spaExamples from '../../utils/code-examples/spa.json';

function SPA() {
  return (
    <Stack gap="xl">
      {/* Hero Section */}
      <div>
        <Title order={1} mb="md">
          Single Page Application (SPA)
        </Title>
        <Text size="lg" c="dimmed">
          Uma p√°gina, m√∫ltiplas rotas. JavaScript renderiza tudo, 
          navega√ß√£o instant√¢nea, experi√™ncia de app nativo.
        </Text>
      </div>

      {/* What is it */}
      <Paper withBorder p="xl" radius="md">
        <Stack gap="md">
          <Group>
            <ThemeIcon size={50} radius="md" variant="light" color="blue">
              <IconLayout size={25} />
            </ThemeIcon>
            <div>
              <Title order={3}>O que √©?</Title>
              <Text c="dimmed">Aplica√ß√£o que roda em uma √∫nica p√°gina HTML</Text>
            </div>
          </Group>
          
          <Text>
            SPA √© sobre uma coisa s√≥: <strong>JavaScript renderiza tudo</strong>.
          </Text>
          
          <Text>
            Pensa assim: ao inv√©s de servidor renderizar cada p√°gina, 
            voc√™ tem uma p√°gina HTML que carrega JavaScript. O JavaScript 
            renderiza diferentes componentes baseado na URL.
          </Text>
          
          <Text>
            A regra √© simples: <em>uma p√°gina, m√∫ltiplas rotas, JavaScript controla tudo</em>. 
            Navega√ß√£o instant√¢nea, experi√™ncia de app nativo, sem reload.
          </Text>
        </Stack>
      </Paper>

      {/* Concepts */}
      <div>
        <Title order={2} mb="lg">
          <IconBolt size={28} style={{ verticalAlign: 'middle', marginRight: '8px' }} />
          Os 3 Conceitos Principais
        </Title>
        
        <Stack gap="md">
          <Card withBorder p="md">
            <Group>
              <Badge size="lg" variant="light" color="green">1</Badge>
              <div>
                <Title order={4}>Uma P√°gina HTML</Title>
                <Text size="sm" c="dimmed">
                  P√°gina inicial que carrega JavaScript. 
                  O resto √© renderizado pelo JavaScript.
                </Text>
                <CodeExample
                  title={spaExamples.find(e => e.id === 'spa-html-page')?.title || ''}
                  code={spaExamples.find(e => e.id === 'spa-html-page')?.content || ''}
                />
              </div>
            </Group>
          </Card>

          <Card withBorder p="md">
            <Group>
              <Badge size="lg" variant="light" color="blue">2</Badge>
              <div>
                <Title order={4}>Roteamento Client-Side</Title>
                <Text size="sm" c="dimmed">
                  JavaScript gerencia rotas. URL muda, 
                  componente renderiza, sem reload.
                </Text>
                <CodeExample
                  title={spaExamples.find(e => e.id === 'spa-routing')?.title || ''}
                  code={spaExamples.find(e => e.id === 'spa-routing')?.content || ''}
                />
              </div>
            </Group>
          </Card>

          <Card withBorder p="md">
            <Group>
              <Badge size="lg" variant="light" color="orange">3</Badge>
              <div>
                <Title order={4}>Estado Global</Title>
                <Text size="sm" c="dimmed">
                  Estado compartilhado entre componentes. 
                  Redux, Context, Zustand.
                </Text>
                <CodeExample
                  title={spaExamples.find(e => e.id === 'spa-state-management')?.title || ''}
                  code={spaExamples.find(e => e.id === 'spa-state-management')?.content || ''}
                />
              </div>
            </Group>
          </Card>
        </Stack>
      </div>

      {/* Benefits */}
      <div>
        <Title order={2} mb="lg">
          <IconCheck size={28} style={{ verticalAlign: 'middle', marginRight: '8px' }} />
          Por que vale a pena?
        </Title>
        
        <Stack gap="md">
          <Card withBorder p="md">
            <Group>
              <ThemeIcon size={40} radius="md" variant="light" color="green">
                <IconBolt size={20} />
              </ThemeIcon>
              <div>
                <Title order={4}>Navega√ß√£o Instant√¢nea</Title>
                <Text size="sm">
                  Sem reload de p√°gina, transi√ß√µes suaves, 
                  experi√™ncia de app nativo.
                </Text>
              </div>
            </Group>
          </Card>

          <Card withBorder p="md">
            <Group>
              <ThemeIcon size={40} radius="md" variant="light" color="blue">
                <IconLayout size={20} />
              </ThemeIcon>
              <div>
                <Title order={4}>Estado Persistente</Title>
                <Text size="sm">
                  Estado mantido entre navega√ß√µes, 
                  dados compartilhados, UX fluida.
                </Text>
              </div>
            </Group>
          </Card>

          <Card withBorder p="md">
            <Group>
              <ThemeIcon size={40} radius="md" variant="light" color="purple">
                <IconBulb size={20} />
              </ThemeIcon>
              <div>
                <Title order={4}>Interatividade Rica</Title>
                <Text size="sm">
                  Anima√ß√µes, transi√ß√µes, feedback visual. 
                  Experi√™ncia moderna e responsiva.
                </Text>
              </div>
            </Group>
          </Card>
        </Stack>
      </div>

      {/* When to use */}
      <div>
        <Title order={2} mb="lg">
          <IconAlertTriangle size={28} style={{ verticalAlign: 'middle', marginRight: '8px' }} />
          Quando usar?
        </Title>
        
        <Stack gap="md">
          <Alert variant="light" color="green" title="‚úÖ Use quando:">
            <List>
              <List.Item>Aplica√ß√µes com muita interatividade</List.Item>
              <List.Item>Dashboards e pain√©is administrativos</List.Item>
              <List.Item>Apps com estado complexo</List.Item>
              <List.Item>Experi√™ncia de app nativo √© importante</List.Item>
              <List.Item>Navega√ß√£o frequente entre p√°ginas</List.Item>
            </List>
          </Alert>

          <Alert variant="light" color="red" title="‚ùå Evite quando:">
            <List>
              <List.Item>SEO √© cr√≠tico (conte√∫do n√£o indexa)</List.Item>
              <List.Item>Performance inicial √© prioridade</List.Item>
              <List.Item>Sites de conte√∫do est√°tico</List.Item>
              <List.Item>Usu√°rios com JavaScript desabilitado</List.Item>
            </List>
          </Alert>
        </Stack>
      </div>

      {/* Real Examples */}
      <div>
        <Title order={2} mb="lg">
          <IconCode size={28} style={{ verticalAlign: 'middle', marginRight: '8px' }} />
          Exemplos Pr√°ticos no Front-End
        </Title>
        
        <Stack gap="xl">
          {/* Example 1: Dashboard */}
          <Paper withBorder p="xl" radius="md">
            <Title order={3} mb="md">üìä Dashboard - Aplica√ß√£o Complexa</Title>
            
            <Stack gap="md">
              <Text>
                <strong>Cen√°rio:</strong> Dashboard administrativo com m√∫ltiplas se√ß√µes, 
                gr√°ficos interativos, filtros din√¢micos.
                <br />
                <strong>Problema:</strong> Navega√ß√£o lenta, estado perdido, 
                experi√™ncia fragmentada.
              </Text>
              
              <CodeExample
                title={spaExamples.find(e => e.id === 'spa-dashboard-complex')?.title || ''}
                code={spaExamples.find(e => e.id === 'spa-dashboard-complex')?.content || ''}
              />
            </Stack>
          </Paper>

          {/* Example 2: E-commerce */}
          <Paper withBorder p="xl" radius="md">
            <Title order={3} mb="md">üõí E-commerce - Carrinho Persistente</Title>
            
            <Stack gap="md">
              <Text>
                <strong>Cen√°rio:</strong> Loja online com carrinho de compras, 
                navega√ß√£o entre produtos, checkout.
                <br />
                <strong>Problema:</strong> Carrinho perdido ao navegar, 
                experi√™ncia fragmentada.
              </Text>
              
              <CodeExample
                title={spaExamples.find(e => e.id === 'spa-ecommerce-cart')?.title || ''}
                code={spaExamples.find(e => e.id === 'spa-ecommerce-cart')?.content || ''}
              />
            </Stack>
          </Paper>

          {/* Example 3: Social Media */}
          <Paper withBorder p="xl" radius="md">
            <Title order={3} mb="md">üì± Social Media - Feed Din√¢mico</Title>
            
            <Stack gap="md">
              <Text>
                <strong>Cen√°rio:</strong> Rede social com feed infinito, 
                notifica√ß√µes em tempo real, chat.
                <br />
                <strong>Problema:</strong> Feed recarrega, notifica√ß√µes perdidas, 
                experi√™ncia fragmentada.
              </Text>
              
              <CodeExample
                title={spaExamples.find(e => e.id === 'spa-social-media-feed')?.title || ''}
                code={spaExamples.find(e => e.id === 'spa-social-media-feed')?.content || ''}
              />
            </Stack>
          </Paper>
        </Stack>
      </div>

      {/* Pitfalls */}
      <div>
        <Title order={2} mb="lg">
          <IconAlertTriangle size={28} style={{ verticalAlign: 'middle', marginRight: '8px' }} />
          Armadilhas Comuns
        </Title>
        
        <Stack gap="md">
          <Alert variant="light" color="red" title="üö® SEO - Conte√∫do n√£o indexa">
            <Text>
              <strong>Problema:</strong> JavaScript renderiza conte√∫do, 
              crawlers n√£o veem nada.
            </Text>
            <Text>
              <strong>Solu√ß√£o:</strong> SSR (Next.js), SSG (Gatsby), 
              ou SPA para conte√∫do privado.
            </Text>
          </Alert>

          <Alert variant="light" color="red" title="üö® Performance Inicial">
            <Text>
              <strong>Problema:</strong> Bundle grande, carregamento lento, 
              primeira renderiza√ß√£o demora.
            </Text>
            <Text>
              <strong>Solu√ß√£o:</strong> Code splitting, lazy loading, 
              otimiza√ß√£o de bundle.
            </Text>
          </Alert>

          <Alert variant="light" color="red" title="üö® Complexidade de Estado">
            <Text>
              <strong>Problema:</strong> Estado global complexo, 
              dif√≠cil de gerenciar, bugs sutis.
            </Text>
            <Text>
              <strong>Solu√ß√£o:</strong> Redux Toolkit, Zustand, 
              Context API bem estruturado.
            </Text>
          </Alert>

          <Alert variant="light" color="red" title="üö® JavaScript Desabilitado">
            <Text>
              <strong>Problema:</strong> Usu√°rios sem JavaScript 
              n√£o conseguem usar a aplica√ß√£o.
            </Text>
            <Text>
              <strong>Solu√ß√£o:</strong> Progressive enhancement, 
              fallbacks para funcionalidades cr√≠ticas.
            </Text>
          </Alert>
        </Stack>
      </div>

      {/* References */}
      <div>
        <Title order={2} mb="lg">
          <IconBulb size={28} style={{ verticalAlign: 'middle', marginRight: '8px' }} />
          Refer√™ncias e Casos Reais
        </Title>
        
        <Stack gap="md">
          <Card withBorder p="md">
            <Title order={4}>üìö Livros</Title>
            <List>
              <List.Item>"Learning React" - Alex Banks</List.Item>
              <List.Item>"React Router v6" - Documentation</List.Item>
              <List.Item>"Redux Toolkit" - Official Guide</List.Item>
            </List>
          </Card>

          <Card withBorder p="md">
            <Title order={4}>üåê Casos Reais</Title>
            <List>
              <List.Item><strong>Netflix:</strong> SPA para streaming, navega√ß√£o instant√¢nea</List.Item>
              <List.Item><strong>Spotify:</strong> Player persistente, playlists din√¢micas</List.Item>
              <List.Item><strong>Gmail:</strong> Interface de email, m√∫ltiplas abas</List.Item>
              <List.Item><strong>Airbnb:</strong> Busca de acomoda√ß√µes, filtros complexos</List.Item>
            </List>
          </Card>

          <Card withBorder p="md">
            <Title order={4}>üõ†Ô∏è Ferramentas</Title>
            <List>
              <List.Item><strong>React Router:</strong> Roteamento client-side</List.Item>
              <List.Item><strong>Redux Toolkit:</strong> Gerenciamento de estado</List.Item>
              <List.Item><strong>Vite:</strong> Build tool r√°pida</List.Item>
              <List.Item><strong>React Query:</strong> Cache e sincroniza√ß√£o</List.Item>
            </List>
          </Card>
        </Stack>
      </div>

      {/* Summary */}
      <Paper withBorder p="xl" radius="md">
        <Title order={2} mb="md">
          <IconCheck size={28} style={{ verticalAlign: 'middle', marginRight: '8px' }} />
          Resumo - SPA
        </Title>
        
        <Stack gap="md">
          <Text>
            <strong>SPA √© sobre:</strong> JavaScript renderiza tudo, uma p√°gina HTML, 
            navega√ß√£o instant√¢nea, experi√™ncia de app nativo.
          </Text>
          
          <Text>
            <strong>Use quando:</strong> Aplica√ß√µes interativas, dashboards, 
            apps com estado complexo, experi√™ncia fluida √© importante.
          </Text>
          
          <Text>
            <strong>Evite quando:</strong> SEO √© cr√≠tico, performance inicial √© prioridade, 
            sites de conte√∫do est√°tico.
          </Text>
          
          <Text>
            <strong>Principais benef√≠cios:</strong> Navega√ß√£o instant√¢nea, estado persistente, 
            interatividade rica, experi√™ncia moderna.
          </Text>
          
          <Text>
            <strong>Principais desafios:</strong> SEO, performance inicial, 
            complexidade de estado, depend√™ncia de JavaScript.
          </Text>
        </Stack>
      </Paper>
    </Stack>
  );
}

export default SPA;

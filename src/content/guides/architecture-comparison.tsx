import React from 'react';
import {
  Title,
  Text,
  Stack,
  Paper,
  Alert,
  Group,
  ThemeIcon,
} from '@mantine/core';
import { IconScale, IconBulb, IconAlertTriangle } from '@tabler/icons-react';
import ArchitectureComparison from '../../components/ArchitectureComparison';

const architectureData = [
  {
    name: 'Clean Architecture',
    description:
      'Separa√ß√£o clara de responsabilidades, independ√™ncia de frameworks',
    metrics: [
      {
        name: 'Performance',
        value: 6,
        description:
          'Overhead de abstra√ß√µes, mas compensado por testes r√°pidos',
        icon: null,
      },
      {
        name: 'Manutenibilidade',
        value: 9,
        description: 'C√≥digo organizado, responsabilidades claras',
        icon: null,
      },
      {
        name: 'Testabilidade',
        value: 10,
        description: 'Testes unit√°rios puros, sem mocks complexos',
        icon: null,
      },
      {
        name: 'Escalabilidade',
        value: 8,
        description: 'Suporta crescimento e m√∫ltiplos frontends',
        icon: null,
      },
      {
        name: 'Complexidade',
        value: 7,
        description: 'Curva de aprendizado √≠ngreme, mas compensa',
        icon: null,
      },
    ],
    pros: [
      'Testes unit√°rios puros e r√°pidos',
      'Independ√™ncia total de frameworks',
      'Migra√ß√µes seguras entre tecnologias',
      'C√≥digo de neg√≥cio reutiliz√°vel',
      'Manutenibilidade a longo prazo',
    ],
    cons: [
      'Complexidade inicial alta',
      'Mais arquivos e pastas',
      'Curva de aprendizado √≠ngreme',
      'Over-engineering para projetos simples',
      'Performance overhead em alguns casos',
    ],
    bestFor: [
      'Projetos complexos com regras de neg√≥cio',
      'Times s√™nior que entendem os trade-offs',
      'Projetos de longo prazo (2+ anos)',
      'Migra√ß√µes frequentes entre tecnologias',
      'M√∫ltiplos frontends (web, mobile, desktop)',
    ],
    avoidWhen: [
      'Projeto simples (MVP, landing page)',
      'Time j√∫nior sem mentoria',
      'Deadline apertado (menos de 2 meses)',
      'Performance cr√≠tica n√£o √© aceit√°vel',
      'Projeto experimental ou prot√≥tipo',
    ],
  },
  {
    name: 'Component-Driven',
    description: 'Desenvolvimento baseado em componentes reutiliz√°veis',
    metrics: [
      {
        name: 'Performance',
        value: 8,
        description: 'Componentes otimizados, reutiliza√ß√£o eficiente',
        icon: null,
      },
      {
        name: 'Manutenibilidade',
        value: 7,
        description: 'Componentes isolados, f√°cil de manter',
        icon: null,
      },
      {
        name: 'Testabilidade',
        value: 8,
        description: 'Testes de componentes isolados',
        icon: null,
      },
      {
        name: 'Escalabilidade',
        value: 7,
        description: 'Design system escal√°vel',
        icon: null,
      },
      {
        name: 'Complexidade',
        value: 5,
        description: 'Conceito familiar para devs front-end',
        icon: null,
      },
    ],
    pros: [
      'Reutiliza√ß√£o de componentes',
      'Desenvolvimento paralelo',
      'Design system consistente',
      'Testes de componentes isolados',
      'Curva de aprendizado suave',
    ],
    cons: [
      'Pode criar depend√™ncias entre componentes',
      'Over-engineering de componentes simples',
      'Dif√≠cil de refatorar componentes complexos',
      'Pode gerar props drilling',
      'Design system pode ficar complexo',
    ],
    bestFor: [
      'Design systems',
      'Aplica√ß√µes com UI complexa',
      'Times que trabalham em paralelo',
      'Projetos com muitas telas similares',
      'Reutiliza√ß√£o de componentes',
    ],
    avoidWhen: [
      'Aplica√ß√£o muito simples',
      'UI √∫nica e espec√≠fica',
      'Time pequeno sem experi√™ncia',
      'Prototipagem r√°pida',
      'L√≥gica de neg√≥cio complexa',
    ],
  },
  {
    name: 'Micro-frontends',
    description: 'Aplica√ß√£o dividida em m√≥dulos independentes',
    metrics: [
      {
        name: 'Performance',
        value: 7,
        description: 'Bundles menores, carregamento independente',
        icon: null,
      },
      {
        name: 'Manutenibilidade',
        value: 6,
        description: 'M√≥dulos isolados, mas integra√ß√£o complexa',
        icon: null,
      },
      {
        name: 'Testabilidade',
        value: 6,
        description: 'Testes por m√≥dulo, mas integra√ß√£o dif√≠cil',
        icon: null,
      },
      {
        name: 'Escalabilidade',
        value: 9,
        description: 'Times independentes, deploys separados',
        icon: null,
      },
      {
        name: 'Complexidade',
        value: 8,
        description: 'Integra√ß√£o complexa, routing avan√ßado',
        icon: null,
      },
    ],
    pros: [
      'Times independentes',
      'Deploys separados',
      'Tecnologias heterog√™neas',
      'Escalabilidade de times',
      'Isolamento de falhas',
    ],
    cons: [
      'Integra√ß√£o complexa',
      'Duplica√ß√£o de depend√™ncias',
      'Routing avan√ßado',
      'Performance overhead',
      'Debugging complexo',
    ],
    bestFor: [
      'Times grandes e independentes',
      'Aplica√ß√µes com dom√≠nios distintos',
      'Migra√ß√£o gradual de legacy',
      'Tecnologias heterog√™neas',
      'Escalabilidade de times',
    ],
    avoidWhen: [
      'Time pequeno',
      'Aplica√ß√£o simples',
      'Integra√ß√£o complexa entre m√≥dulos',
      'Performance cr√≠tica',
      'Deadline apertado',
    ],
  },
  {
    name: 'Monorepo',
    description: 'M√∫ltiplos projetos em um reposit√≥rio',
    metrics: [
      {
        name: 'Performance',
        value: 6,
        description: 'Build otimizado, mas inicial lento',
        icon: null,
      },
      {
        name: 'Manutenibilidade',
        value: 8,
        description: 'C√≥digo compartilhado, refatora√ß√£o segura',
        icon: null,
      },
      {
        name: 'Testabilidade',
        value: 7,
        description: 'Testes integrados, mas complexos',
        icon: null,
      },
      {
        name: 'Escalabilidade',
        value: 7,
        description: 'Compartilhamento eficiente',
        icon: null,
      },
      {
        name: 'Complexidade',
        value: 6,
        description: 'Tooling complexo, mas familiar',
        icon: null,
      },
    ],
    pros: [
      'Compartilhamento de c√≥digo',
      'Refatora√ß√£o segura',
      'Tooling centralizado',
      'Versionamento unificado',
      'Depend√™ncias compartilhadas',
    ],
    cons: [
      'Build inicial lento',
      'Tooling complexo',
      'Pode ficar grande demais',
      'Deploy de tudo junto',
      'Curva de aprendizado',
    ],
    bestFor: [
      'M√∫ltiplos projetos relacionados',
      'Compartilhamento de c√≥digo',
      'Refatora√ß√£o frequente',
      'Tooling centralizado',
      'Versionamento unificado',
    ],
    avoidWhen: [
      'Projeto √∫nico',
      'Times muito independentes',
      'Tecnologias muito diferentes',
      'Build time cr√≠tico',
      'Deploy independente necess√°rio',
    ],
  },
];

function ArchitectureComparisonPage() {
  return (
    <Stack gap="xl">
      {/* Hero Section */}
      <div>
        <Title order={1} mb="md">
          Compara√ß√£o de Arquiteturas Front-End
        </Title>
        <Text size="lg" c="dimmed">
          Compare diferentes arquiteturas baseado em m√©tricas pr√°ticas e
          contexto real. Encontre a arquitetura certa para o seu projeto.
        </Text>
      </div>

      {/* Introduction */}
      <Paper withBorder p="xl" radius="md">
        <Stack gap="md">
          <Group>
            <ThemeIcon size={50} radius="md" variant="light" color="blue">
              <IconScale size={25} />
            </ThemeIcon>
            <div>
              <Title order={3}>Como usar esta compara√ß√£o</Title>
              <Text c="dimmed">
                Baseie suas decis√µes em dados, n√£o em opini√µes
              </Text>
            </div>
          </Group>

          <Text>
            Cada arquitetura tem seus trade-offs. N√£o existe "melhor"
            arquitetura - existe a arquitetura certa para o seu contexto
            espec√≠fico.
          </Text>

          <Text>
            Use as m√©tricas abaixo para comparar arquiteturas baseado em:
          </Text>

          <Alert color="blue" icon={<IconBulb size={16} />} radius="md">
            <Text size="sm" fw={600} mb={4}>
              üìä M√©tricas Avaliadas:
            </Text>
            <Text size="sm" c="dimmed">
              <strong>Performance:</strong> Velocidade e efici√™ncia
              <br />
              <strong>Manutenibilidade:</strong> Facilidade de manuten√ß√£o
              <br />
              <strong>Testabilidade:</strong> Facilidade de testes
              <br />
              <strong>Escalabilidade:</strong> Capacidade de crescimento
              <br />
              <strong>Complexidade:</strong> Curva de aprendizado
            </Text>
          </Alert>
        </Stack>
      </Paper>

      {/* Comparison Component */}
      <ArchitectureComparison architectures={architectureData} />

      {/* Decision Guide */}
      <Paper withBorder p="xl" radius="md">
        <Title order={2} mb="lg">
          <IconBulb
            size={28}
            style={{ verticalAlign: 'middle', marginRight: '8px' }}
          />
          Guia de Decis√£o
        </Title>

        <Stack gap="md">
          <Alert color="green" icon={<IconBulb size={16} />} radius="md">
            <Text size="sm" fw={600} mb={4}>
              ‚úÖ Passos para escolher:
            </Text>
            <Text size="sm" c="dimmed">
              1. <strong>Defina seu contexto:</strong> Time, prazo, complexidade
              <br />
              2. <strong>Priorize m√©tricas:</strong> O que √© mais importante?
              <br />
              3. <strong>Compare trade-offs:</strong> Vantagens vs desvantagens
              <br />
              4. <strong>Considere o futuro:</strong> Como o projeto vai
              crescer?
              <br />
              5. <strong>Teste a decis√£o:</strong> Prot√≥tipo ou POC
            </Text>
          </Alert>

          <Alert
            color="orange"
            icon={<IconAlertTriangle size={16} />}
            radius="md"
          >
            <Text size="sm" fw={600} mb={4}>
              ‚ö†Ô∏è Armadilhas comuns:
            </Text>
            <Text size="sm" c="dimmed">
              ‚Ä¢ <strong>Over-engineering:</strong> Complexidade desnecess√°ria
              <br />‚Ä¢ <strong>Under-engineering:</strong> Simplicidade que n√£o
              escala
              <br />‚Ä¢ <strong>Decis√£o prematura:</strong> Escolher antes de
              entender
              <br />‚Ä¢ <strong>Ignorar contexto:</strong> Copiar sem adaptar
              <br />‚Ä¢ <strong>Foco em tecnologia:</strong> Esquecer do neg√≥cio
            </Text>
          </Alert>
        </Stack>
      </Paper>

      {/* Next Steps */}
      <Paper withBorder p="xl" radius="md">
        <Title order={2} mb="lg">
          üöÄ Pr√≥ximos Passos
        </Title>

        <Stack gap="md">
          <Text>
            Depois de escolher uma arquitetura, use o{' '}
            <strong>Decision Wizard</strong> para obter recomenda√ß√µes
            personalizadas baseadas no seu contexto espec√≠fico.
          </Text>

          <Text>
            Cada arquitetura tem sua pr√≥pria p√°gina com implementa√ß√£o detalhada,
            exemplos de c√≥digo e casos de uso reais.
          </Text>

          <Text>
            <strong>Lembre-se:</strong> Arquitetura √© trade-off atr√°s de
            trade-off. O que resolve para um projeto pode ser dor de cabe√ßa para
            outro.
          </Text>
        </Stack>
      </Paper>
    </Stack>
  );
}

export default ArchitectureComparisonPage;

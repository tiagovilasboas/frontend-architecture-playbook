---
import type { CollectionEntry } from 'astro:content';
interface Props {
  patterns: CollectionEntry<'patterns'>[];
  guides: CollectionEntry<'guides'>[];
}
const { patterns = [], guides = [] } = Astro.props as Props;
const items = [
  ...patterns.map(p => ({ title: p.data.title, slug: `/patterns/${p.slug}` })),
  ...guides.map(g => ({ title: g.data.title, slug: `/guides/${g.slug}` })),
];
---
<div id="search-overlay" class="fixed inset-0 bg-base-300/50 backdrop-blur-sm hidden z-50">
  <div class="absolute inset-0 flex items-start justify-center pt-24 px-4">
    <div class="bg-base-100 rounded-box shadow-xl w-full max-w-xl p-6">
      <input id="search-input" type="text" placeholder="Search..." class="input input-bordered w-full mb-4" />
      <ul id="search-results" class="space-y-2 max-h-80 overflow-y-auto"></ul>
      <p class="text-xs opacity-60 mt-4 text-right">Press Esc to close • ↑↓ to navigate • Enter to open</p>
    </div>
  </div>
</div>

<script type="module" is:inline>
  import Fuse from 'https://cdn.jsdelivr.net/npm/fuse.js@7.1.0/+esm';

  const overlay = document.getElementById('search-overlay');
  const input = document.getElementById('search-input');
  const resultsList = document.getElementById('search-results');
  const data = JSON.parse(decodeURIComponent("{encodeURIComponent(JSON.stringify(items))}"));
  const fuse = new Fuse(data, { keys: ['title'], threshold: 0.4 });

  function open() {
    overlay.classList.remove('hidden');
    input.value = '';
    resultsList.innerHTML = '';
    setTimeout(() => input.focus(), 0);
  }
  function close() {
    overlay.classList.add('hidden');
  }

  window.addEventListener('keydown', (e) => {
    if ((e.key === 'k' && (e.metaKey || e.ctrlKey)) || (e.key === '/' && !e.target.matches('input,textarea'))) {
      e.preventDefault();
      open();
    }
    if (e.key === 'Escape' && !overlay.classList.contains('hidden')) {
      close();
    }
  });

  input.addEventListener('input', () => {
    const query = input.value.trim();
    resultsList.innerHTML = '';
    if (!query) return;
    const res = fuse.search(query, { limit: 10 });
    res.forEach(({ item }) => {
      const li = document.createElement('li');
      li.innerHTML = `<a href="${item.slug}" class="link-hover">${item.title}</a>`;
      resultsList.appendChild(li);
    });
  });
</script>
--- 
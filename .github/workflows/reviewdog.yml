name: reviewdog

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  # ESLint review
  eslint:
    name: ESLint Review
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint with reviewdog
        uses: reviewdog/action-eslint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          eslint_flags: 'src/ --ext .ts,.tsx,.js,.jsx'
          fail_on_error: false

  # TypeScript review
  typescript:
    name: TypeScript Review
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript with reviewdog
        uses: EPMatt/reviewdog-action-tsc@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          fail_on_error: false

  # Prettier review
  prettier:
    name: Prettier Review
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Prettier with reviewdog
        uses: EPMatt/reviewdog-action-prettier@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          prettier_flags: 'src/ --check'
          fail_on_error: false

  # Spelling review
  misspell:
    name: Spelling Review
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run misspell with reviewdog
        uses: reviewdog/action-misspell@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          path: 'src/'
          pattern: '*.{ts,tsx,js,jsx,md}'
          locale: 'US'

  # Security review
  semgrep:
    name: Security Review
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Semgrep with reviewdog
        uses: reviewdog/action-semgrep@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          semgrep_flags: '--config=auto'

  # Bundle size review
  bundle-size:
    name: Bundle Size Review
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Analyze bundle size
        uses: preactjs/compressed-size-action@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          pattern: 'dist/**/*.{js,css}'
          exclude: '{**/*.map,**/node_modules/**}'

  # Test review
  test-coverage:
    name: Test Coverage Review
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm test -- --coverage --watchAll=false

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

  # Architecture validation
  madge:
    name: Architecture Review
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install madge
        run: npm install -g madge

      - name: Check for circular dependencies
        run: |
          echo "Checking for circular dependencies..."
          madge --circular --extensions ts,tsx,js,jsx src/ || exit 0

      - name: Generate dependency graph
        run: |
          echo "Generating dependency graph..."
          madge --image dependency-graph.png src/ || exit 0

      - name: Upload dependency graph
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: dependency-graph
          path: dependency-graph.png

  # Performance review
  lighthouse:
    name: Lighthouse Review
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Serve build
        run: npx serve -s dist -l 3000 &

      - name: Wait for server
        run: sleep 10

      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli
          lhci autorun || exit 0
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Accessibility review
  axe:
    name: Accessibility Review
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Run accessibility tests
        run: |
          npm install -g @axe-core/cli
          npx serve -s dist -l 3000 &
          sleep 10
          axe http://localhost:3000 --reporter json --output axe-results.json || exit 0

      - name: Upload axe results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: axe-results
          path: axe-results.json